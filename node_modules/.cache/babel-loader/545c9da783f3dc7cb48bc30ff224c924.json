{"ast":null,"code":"var _jsxFileName = \"/home/luisffg/Projetos/sd-12-project-frontend-online-store/src/components/CategoryPage.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ProductCard from './ProductsCard';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\n\nclass CategoryPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      results: [],\n      loading: true\n    };\n    this.changeSate = this.changeSate.bind(this);\n    this.renderLoading = this.renderLoading.bind(this);\n  }\n\n  componentDidMount() {\n    this.changeSate();\n  }\n\n  changeSate() {\n    const {\n      match: {\n        params: {\n          categoria: id\n        }\n      }\n    } = this.props;\n    getProductsFromCategoryAndQuery(id).then(({\n      results\n    }) => this.setState({\n      results,\n      loading: false\n    }));\n  }\n\n  renderLoading() {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      src: \"./loading.gif\",\n      alt: \"Loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 12\n      }\n    });\n  }\n\n  render() {\n    const {\n      results,\n      loading\n    } = this.state;\n    return loading ? this.renderLoading() : /*#__PURE__*/React.createElement(ProductCard, {\n      product: results,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 45\n      }\n    });\n  }\n\n}\n\nCategoryPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      categoria: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default CategoryPage;","map":{"version":3,"sources":["/home/luisffg/Projetos/sd-12-project-frontend-online-store/src/components/CategoryPage.js"],"names":["React","Component","PropTypes","ProductCard","getProductsFromCategoryAndQuery","CategoryPage","constructor","state","results","loading","changeSate","bind","renderLoading","componentDidMount","match","params","categoria","id","props","then","setState","render","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,+BAAT,QAAgD,iBAAhD;;AAEA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AACnCK,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAIA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,UAAL;AACD;;AAEDA,EAAAA,UAAU,GAAG;AACX,UAAM;AAAEI,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,SAAS,EAAEC;AAAb;AAAV;AAAT,QAA2C,KAAKC,KAAtD;AACAd,IAAAA,+BAA+B,CAACa,EAAD,CAA/B,CACGE,IADH,CACQ,CAAC;AAAEX,MAAAA;AAAF,KAAD,KACJ,KAAKY,QAAL,CAAc;AACZZ,MAAAA,OADY;AAEZC,MAAAA,OAAO,EAAE;AAFG,KAAd,CAFJ;AAOD;;AAEDG,EAAAA,aAAa,GAAG;AACd,wBAAO;AAAK,MAAA,GAAG,EAAC,eAAT;AAAyB,MAAA,GAAG,EAAC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAuB,KAAKF,KAAlC;AACA,WAAOE,OAAO,GAAG,KAAKG,aAAL,EAAH,gBAA0B,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAGJ,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxC;AACD;;AAjCkC;;AAoCrCH,YAAY,CAACiB,SAAb,GAAyB;AACvBR,EAAAA,KAAK,EAAEZ,SAAS,CAACqB,KAAV,CAAgB;AACrBR,IAAAA,MAAM,EAAEb,SAAS,CAACqB,KAAV,CAAgB;AACtBP,MAAAA,SAAS,EAAEd,SAAS,CAACsB,MAAV,CAAiBC;AADN,KAAhB,EAELA;AAHkB,GAAhB,EAIJA;AALoB,CAAzB;AAQA,eAAepB,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ProductCard from './ProductsCard';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\n\nclass CategoryPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      results: [],\n      loading: true,\n    };\n    this.changeSate = this.changeSate.bind(this);\n    this.renderLoading = this.renderLoading.bind(this);\n  }\n\n  componentDidMount() {\n    this.changeSate();\n  }\n\n  changeSate() {\n    const { match: { params: { categoria: id } } } = this.props;\n    getProductsFromCategoryAndQuery(id)\n      .then(({ results }) => (\n        this.setState({\n          results,\n          loading: false,\n        })\n      ));\n  }\n\n  renderLoading() {\n    return <img src=\"./loading.gif\" alt=\"Loading\" />;\n  }\n\n  render() {\n    const { results, loading } = this.state;\n    return loading ? this.renderLoading() : <ProductCard product={ results } />;\n  }\n}\n\nCategoryPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      categoria: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default CategoryPage;\n"]},"metadata":{},"sourceType":"module"}