{"ast":null,"code":"var _jsxFileName = \"/home/luisffg/Projetos/sd-12-project-frontend-online-store/src/components/ShoppingCart.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ShoppingCart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalQuantity: props.cartAdd.length,\n      cartAdd: props.cartAdd,\n      price: props.price\n    };\n    this.quantitySum = this.quantitySum.bind(this);\n    this.quantitySub = this.quantitySub.bind(this);\n  }\n\n  quantitySum({\n    target\n  }) {\n    const {\n      name\n    } = target;\n    this.setState(prevState => ({\n      [name]: prevState[name] ? prevState[name] + 1 : 2,\n      totalQuantity: prevState.totalQuantity + 1\n    }));\n  }\n\n  quantitySub({\n    target\n  }) {\n    const {\n      name\n    } = target;\n    this.setState(prevState => ({\n      [name]: prevState[name] ? prevState[name] - 1 : 0,\n      totalQuantity: prevState.totalQuantity ? prevState.totalQuantity - 1 : 1\n    }));\n  }\n\n  render() {\n    const {\n      totalQuantity,\n      price\n    } = this.state;\n    const {\n      cartAdd\n    } = this.props;\n    const carrinhoVazio = /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"shopping-cart-empty-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"Seu carrinho est\\xE1 vazio\"));\n    const carrinhoCheio = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, cartAdd.map((item, index) => {\n      const {\n        [item.id]: quantidade\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        \"data-testid\": \"shopping-cart-product-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }, item.title), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, \"Pre\\xE7o:R$\", typeof quantidade === 'number' ? price[index] * quantidade : price), /*#__PURE__*/React.createElement(\"img\", {\n        src: item.thumbnail,\n        alt: item.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.quantitySum,\n        name: item.id,\n        \"data-testid\": \"product-increase-quantity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }\n      }, \"+\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.quantitySub,\n        name: item.id,\n        \"data-testid\": \"product-decrease-quantity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      }, \"-\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }, \"Quantidade:\", quantidade || 1));\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"shopping-cart-product-quantity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, `Total de itens: ${totalQuantity}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \"Valor Total da Compra: R$\", price.length === 0 ? 0 : price.reduce((acc, numb) => acc + numb)));\n\n    if (cartAdd.length === 0) {\n      return carrinhoVazio;\n    }\n\n    return carrinhoCheio;\n  }\n\n}\n\nShoppingCart.propTypes = {\n  cartAdd: PropTypes.func.isRequired\n}.isRequired;\nexport default ShoppingCart;","map":{"version":3,"sources":["/home/luisffg/Projetos/sd-12-project-frontend-online-store/src/components/ShoppingCart.js"],"names":["React","PropTypes","ShoppingCart","Component","constructor","props","state","totalQuantity","cartAdd","length","price","quantitySum","bind","quantitySub","target","name","setState","prevState","render","carrinhoVazio","carrinhoCheio","map","item","index","id","quantidade","title","thumbnail","reduce","acc","numb","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ShoppingCart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalQuantity: props.cartAdd.length,\n      cartAdd: props.cartAdd,\n      price: props.price,\n    };\n\n    this.quantitySum = this.quantitySum.bind(this);\n    this.quantitySub = this.quantitySub.bind(this);\n  }\n\n  quantitySum({ target }) {\n    const { name } = target;\n    this.setState((prevState) => ({\n      [name]: prevState[name] ? prevState[name] + 1 : 2,\n      totalQuantity: prevState.totalQuantity + 1,\n    }));\n  }\n\n  quantitySub({ target }) {\n    const { name } = target;\n    this.setState((prevState) => ({\n      [name]: prevState[name] ? prevState[name] - 1 : 0,\n      totalQuantity: prevState.totalQuantity ? prevState.totalQuantity - 1 : 1,\n    }));\n  }\n\n  render() {\n    const { totalQuantity, price } = this.state;\n    const { cartAdd } = this.props;\n    const carrinhoVazio = (\n      <div data-testid=\"shopping-cart-empty-message\">\n        <p>Seu carrinho está vazio</p>\n      </div>\n    );\n    const carrinhoCheio = (\n      <div>\n        {cartAdd.map((item, index) => {\n          const { [item.id]: quantidade } = this.state;\n          return (\n            <div key={ item.id }>\n              <p data-testid=\"shopping-cart-product-name\">{item.title}</p>\n              <p>\n                Preço:R$\n                {typeof quantidade === 'number' ? price[index] * quantidade : price }\n              </p>\n              <img src={ item.thumbnail } alt={ item.title } />\n              <button\n                type=\"button\"\n                onClick={ this.quantitySum }\n                name={ item.id }\n                data-testid=\"product-increase-quantity\"\n              >\n                +\n              </button>\n              <button\n                type=\"button\"\n                onClick={ this.quantitySub }\n                name={ item.id }\n                data-testid=\"product-decrease-quantity\"\n              >\n                -\n              </button>\n              <p>\n                Quantidade:\n                { quantidade || 1 }\n              </p>\n            </div>\n          );\n        })}\n        <p\n          data-testid=\"shopping-cart-product-quantity\"\n        >\n          {`Total de itens: ${totalQuantity}`}\n        </p>\n        <p>\n          Valor Total da Compra: R$\n          {price.length === 0 ? 0 : price.reduce((acc, numb) => acc + numb)}\n        </p>\n      </div>\n    );\n\n    if (cartAdd.length === 0) {\n      return carrinhoVazio;\n    }\n    return carrinhoCheio;\n  }\n}\n\nShoppingCart.propTypes = {\n  cartAdd: PropTypes.func.isRequired,\n}.isRequired;\n\nexport default ShoppingCart;\n"]},"metadata":{},"sourceType":"module"}